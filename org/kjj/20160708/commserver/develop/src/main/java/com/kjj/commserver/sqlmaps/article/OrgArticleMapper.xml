<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kjj.commserver.sqlmaps.article.OrgArticleMapper" >
  <resultMap id="BaseResultMap" type="com.kjj.commserver.entity.article.OrgArticle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="subtitle" property="subtitle" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="classid" property="classid" jdbcType="SMALLINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="privelege" property="privelege" jdbcType="SMALLINT" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, subtitle, image, classid, url,  privelege, count, status, createtime, 
    userid,content
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from org_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from org_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kjj.commserver.entity.article.OrgArticle" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
    insert into org_article (title, subtitle, image, 
      classid, url,  
      privelege, count, status, 
      createtime, userid, content
      )
    values (#{title,jdbcType=VARCHAR}, #{subtitle,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{classid,jdbcType=SMALLINT}, #{url,jdbcType=VARCHAR}, 
      #{privelege,jdbcType=SMALLINT}, #{count,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kjj.commserver.entity.article.OrgArticle" >
    update org_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subtitle != null" >
        subtitle = #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        classid = #{classid,jdbcType=SMALLINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="privelege != null" >
        privelege = #{privelege,jdbcType=SMALLINT},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kjj.commserver.entity.article.OrgArticle" >
    update org_article
    set title = #{title,jdbcType=VARCHAR},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      classid = #{classid,jdbcType=SMALLINT},
      url = #{url,jdbcType=VARCHAR},
      privelege = #{privelege,jdbcType=SMALLINT},
      count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="VoResultMap" type="com.kjj.commserver.entity.article.aide.OrgArticleVo" extends="BaseResultMap" >
  	 <result column="shopId" property="shopId" jdbcType="VARCHAR" />
  	 <result column="class_name" property="className" jdbcType="VARCHAR" />
  	 <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Vo_Column_List" >
    t.id, 
    t.title, 
    t.subtitle, 
    t.image, 
    t.classid, 
    t.url, 
    t.privelege, 
    t.count, 
    t.status, 
    t.createtime, 
    t.userid,
    t.content
  </sql>
  <select id="selectVoByPrimaryKey" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Column_List" />
    from org_article t
    where t.id = #{id,jdbcType=INTEGER}
  </select>
  <sql id="Query_Where_Clause" >
    <where >
      <if test="id != null" >
          and t.id = #{id,jdbcType=INTEGER}
      </if>
      <if test="title != null" >
          and t.title like concat('%',#{title,jdbcType=VARCHAR},'%')  
      </if>
      <if test="subtitle != null" >
          and t.subtitle = #{subtitle,jdbcType=VARCHAR}
      </if>
      <if test="image != null" >
          and t.image = #{image,jdbcType=VARCHAR}
      </if>
      <if test="classid != null and classid > 0 " >
          and t.classid = #{classid,jdbcType=SMALLINT}
      </if>
      <if test="url != null" >
          and t.url = #{url,jdbcType=VARCHAR}
      </if>
      <if test="privelege != null" >
          and t.privelege = #{privelege,jdbcType=SMALLINT}
      </if>
      <if test="count != null" >
          and t.count = #{count,jdbcType=INTEGER}
      </if>
      <if test="status != null" >
          and t.status = #{status,jdbcType=SMALLINT}
      </if>
      <if test="createtime != null" >
          and t.createtime = #{createtime,jdbcType=TIMESTAMP}
      </if>
      <if test="userid != null" >
          and t.userid = #{userid,jdbcType=INTEGER}
      </if>
      <if test="content != null" >
          and t.content = #{content,jdbcType=LONGVARCHAR}
      </if> 
      <if test="articleShopId != null" >
          and oas.shopId = #{articleShopId,jdbcType=INTEGER}
      </if>
      <if test="titleLike != null" >
          and t.title like concat('%',#{titleLike,jdbcType=VARCHAR},'%')
      </if>
       <if test="title != null" >
          and t.title like concat('%',#{title,jdbcType=VARCHAR},'%')
      </if>
       <if test="parentClassId != null" >
          and oac.parentId = #{parentClassId,jdbcType=INTEGER}
      </if>
    </where>
    <if test="sorting != null" >
      order by ${sorting},t.id desc
    </if>
  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long" >
    select count(t.id) from org_article t
    <if test="articleShopId != null" >
      left join org_article_shop oas on t.id = oas.articleId
    </if>
    left join org_article_class oac on t.classid = oac.id
    <include refid="Query_Where_Clause" />
  </select>
  <select id="select" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Column_List" />
    <if test="articleShopId != null" >
      , oas.shopId
    </if>
    , oac.class_name,oau.user_name
    from org_article t
    <if test="articleShopId != null" >
      left join org_article_shop oas on t.id = oas.articleId
    </if>
    left join org_article_class oac on t.classid = oac.id
    left join org_admin_user oau on t.userid=oau.user_id
    <include refid="Query_Where_Clause" />
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    delete from org_article where id in (
    select t.id from (select * from org_article) t
    <include refid="Query_Where_Clause" />
    )
  </delete>
</mapper>