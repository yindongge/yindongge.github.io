<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kjj.commserver.sqlmaps.account.OrgAccountDepositMapper" >
  <resultMap id="BaseResultMap" type="com.kjj.commserver.entity.account.OrgAccountDeposit" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="fund_amount" property="fundAmount" jdbcType="DECIMAL" />
    <result column="allowance_amount" property="allowanceAmount" jdbcType="DECIMAL" />
    <result column="frozen_amount" property="frozenAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="lock_level" property="lockLevel" jdbcType="TINYINT" />
    <result column="error_num" property="errorNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_code, fund_amount, allowance_amount, frozen_amount, status, pay_password, lock_level, error_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from org_account_deposit
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from org_account_deposit
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kjj.commserver.entity.account.OrgAccountDeposit" useGeneratedKeys="true" keyColumn="user_id" keyProperty="userId" >
    insert into org_account_deposit (user_id, user_code, fund_amount, allowance_amount, 
      frozen_amount, status, pay_password, lock_level, error_num
      )
    values (#{userId,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{fundAmount,jdbcType=DECIMAL}, #{allowanceAmount,jdbcType=DECIMAL}, 
      #{frozenAmount,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{payPassword,jdbcType=VARCHAR}, #{lockLevel,jdbcType=TINYINT},#{errorNum,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kjj.commserver.entity.account.OrgAccountDeposit" >
    update org_account_deposit
    <set >
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="fundAmount != null" >
        fund_amount = #{fundAmount,jdbcType=DECIMAL},
      </if>
      <if test="allowanceAmount != null" >
        allowance_amount = #{allowanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="frozenAmount != null" >
        frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="lockLevel != null" >
        lock_level = #{lockLevel,jdbcType=VARCHAR},
      </if>
      <if test="errorNum != null" >
        error_num = #{errorNum,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kjj.commserver.entity.account.OrgAccountDeposit" >
    update org_account_deposit
    set user_code = #{userCode,jdbcType=VARCHAR},
      fund_amount = #{fundAmount,jdbcType=DECIMAL},
      allowance_amount = #{allowanceAmount,jdbcType=DECIMAL},
      frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      lock_level = #{status,jdbcType=TINYINT},
      error_num = #{errorNum,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="VoResultMap" type="com.kjj.commserver.entity.account.aide.OrgAccountDepositVo" extends="BaseResultMap">
  	 <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Vo_Column_List" >
    t.user_id, 
    t.user_code, 
    t.fund_amount, 
    t.allowance_amount, 
    t.frozen_amount, 
    t.status, 
    t.pay_password,
    t.lock_level,
    t.error_num
  </sql>
  <select id="selectVoByPrimaryKey" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Column_List" />
    from org_account_deposit t
    where t.user_id = #{userId,jdbcType=INTEGER}
  </select>
  <sql id="Query_Where_Clause" >
    <where >
      <if test="userId != null" >
          and t.user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userCode != null" >
          and t.user_code = #{userCode,jdbcType=VARCHAR}
      </if>
      <if test="fundAmount != null" >
          and t.fund_amount = #{fundAmount,jdbcType=DECIMAL}
      </if>
      <if test="allowanceAmount != null" >
          and t.allowance_amount = #{allowanceAmount,jdbcType=DECIMAL}
      </if>
      <if test="frozenAmount != null" >
          and t.frozen_amount = #{frozenAmount,jdbcType=DECIMAL}
      </if>
      <if test="status != null" >
          and t.status = #{status,jdbcType=TINYINT}
      </if>
      <if test="payPassword != null" >
          and t.pay_password = #{payPassword,jdbcType=VARCHAR}
      </if>
      <if test="mobilePhone != null">
          and ou.mobile_phone = #{mobilePhone,jdbcType=VARCHAR}
      </if>
      <if test="lockLevel != null" >
          and t.lock_level = #{lockLevel,jdbcType=TINYINT}
      </if>
      <if test="errorNum != null" >
          and t.error_num = #{errorNum,jdbcType=INTEGER}
      </if>
    </where>
    <if test="sorting != null" >
      order by ${sorting},t.user_id desc
    </if>
  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long" >
    select count(t.user_id) from org_account_deposit t left join org_users ou on t.user_id = ou.user_id
    <include refid="Query_Where_Clause" />
  </select>
  <select id="select" parameterType="java.util.Map" resultMap="VoResultMap" >
    select 
    <include refid="Vo_Select_Column_List" />
    from org_account_deposit t left join org_users ou on t.user_id = ou.user_id
    <include refid="Query_Where_Clause" />
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    delete from org_account_deposit where user_id in (
    select t.user_id from (select * from org_account_deposit) t
    <include refid="Query_Where_Clause" />
    )
  </delete>
  <select id="selectByPrimaryKey4Update" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from org_account_deposit 
    where user_id = #{userId,jdbcType=INTEGER}
    for update
  </select>
  <sql id="Vo_Select_Column_List" >
    t.user_id, 
    t.user_code, 
    t.fund_amount, 
    t.allowance_amount, 
    t.frozen_amount, 
    t.status, 
    t.pay_password,
    t.lock_level,
    t.error_num,
    ou.mobile_phone
  </sql>
</mapper>